openapi: 3.0.3
info:
  title: Cheatgame API
  version: 1.0.0 (v1)
paths:
  /api/auth/jwt/admin-login/:
    post:
      operationId: api_auth_jwt_admin_login_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InPutLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InPutLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InPutLogin'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutPutLogin'
          description: ''
  /api/auth/jwt/customer-login/:
    post:
      operationId: api_auth_jwt_customer_login_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InPutLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InPutLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InPutLogin'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutPutLogin'
          description: ''
  /api/auth/jwt/manager-login/:
    post:
      operationId: api_auth_jwt_manager_login_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InPutLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InPutLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InPutLogin'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutPutLogin'
          description: ''
  /api/auth/jwt/refresh/:
    post:
      operationId: api_auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/jwt/verify/:
    post:
      operationId: api_auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/user/change-password/:
    post:
      operationId: api_user_change_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InputChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputChangePassword'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/user/register/:
    post:
      operationId: api_user_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputRegister'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InputRegister'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputRegister'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutPutRegister'
          description: ''
  /api/user/request-verify-phone/:
    post:
      operationId: api_user_request_verify_phone_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputPhoneOtp'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InputPhoneOtp'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputPhoneOtp'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/user/requset-change-password/:
    post:
      operationId: api_user_requset_change_password_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputPasswordOtp'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InputPasswordOtp'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputPasswordOtp'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/user/requset-verify-emali/:
    post:
      operationId: api_user_requset_verify_emali_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputEmailOtp'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InputEmailOtp'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputEmailOtp'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/user/user/:
    get:
      operationId: api_user_user_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOutPut'
          description: ''
    put:
      operationId: api_user_user_update
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserInput'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserInput'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOutPut'
          description: ''
  /api/user/verify-email/:
    post:
      operationId: api_user_verify_email_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputVerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InputVerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputVerifyEmail'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/user/verify-phone/:
    post:
      operationId: api_user_verify_phone_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputVerifyPhoneSerilazer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InputVerifyPhoneSerilazer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InputVerifyPhoneSerilazer'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
components:
  schemas:
    InPutLogin:
      type: object
      properties:
        phone_number:
          type: string
        password:
          type: string
      required:
      - password
      - phone_number
    InputChangePassword:
      type: object
      properties:
        otp:
          type: integer
        new_password:
          type: string
          minLength: 8
        confirm_new_password:
          type: string
          maxLength: 255
      required:
      - confirm_new_password
      - new_password
      - otp
    InputEmailOtp:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    InputPasswordOtp:
      type: object
      properties:
        phone_number:
          type: string
          maxLength: 11
      required:
      - phone_number
    InputPhoneOtp:
      type: object
      properties:
        phone_number:
          type: string
          maxLength: 11
      required:
      - phone_number
    InputRegister:
      type: object
      properties:
        phone_number:
          type: string
          maxLength: 13
        firstname:
          type: string
          maxLength: 255
        lastname:
          type: string
          maxLength: 255
        password:
          type: string
          minLength: 8
        confirm_password:
          type: string
          maxLength: 255
      required:
      - confirm_password
      - firstname
      - lastname
      - password
      - phone_number
    InputVerifyEmail:
      type: object
      properties:
        email:
          type: string
          format: email
        otp:
          type: integer
      required:
      - email
      - otp
    InputVerifyPhoneSerilazer:
      type: object
      properties:
        phone_number:
          type: string
          maxLength: 11
        otp:
          type: integer
      required:
      - otp
      - phone_number
    OutPutLogin:
      type: object
      properties:
        token:
          type: string
          readOnly: true
      required:
      - token
    OutPutRegister:
      type: object
      properties:
        firstname:
          type: string
          title: First_name
          maxLength: 100
        lastname:
          type: string
          title: Last_name
          maxLength: 100
        phone_number:
          type: string
          maxLength: 11
        token:
          type: string
          readOnly: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - firstname
      - lastname
      - phone_number
      - token
      - updated_at
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    UserInput:
      type: object
      properties:
        firstname:
          type: string
          maxLength: 100
        lastname:
          type: string
          maxLength: 100
        email:
          type: string
          format: email
        birthdate:
          type: string
          format: date
        profile_image:
          type: string
          format: uri
      required:
      - email
      - firstname
      - lastname
    UserOutPut:
      type: object
      properties:
        firstname:
          type: string
          title: First_name
          maxLength: 100
        lastname:
          type: string
          title: Last_name
          maxLength: 100
        phone_number:
          type: string
          maxLength: 11
        profile_image:
          type: string
          format: uri
          nullable: true
        email:
          type: string
          format: email
          nullable: true
          title: Email address
          maxLength: 254
        birthdate:
          type: string
          format: date
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - firstname
      - lastname
      - phone_number
      - updated_at
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
